@model IEnumerable<TrainerModel>

@{
    ViewBag.Title = "Admin | Available Trainers";
    ViewBag.TrainerDetailsActive = "active open";
    ViewBag.AvailableTrainersActive = "active";

}

<div class="container-xxl flex-grow-1 container-p-y">
    <div class="my-4">
        <a asp-controller="Trainer" asp-action="AddTrainer" type="button" class="btn btn-danger">Add Trainer </a>
    </div>
    <div class="card">
        <h5 class="card-header">Registered Trainers</h5>
        <div class="">
            @if (Model.Any())
            {
                 <form id="submitEntries" asp-controller="Trainer" asp-action="AvailableTrainers" asp-route-pageNumber="1" method="get" class=" my-1 p-2" style="display: flex;flex-direction: row;">
        Show&emsp;
        <div>
            <select onchange="changeEntries()" type="text" id="entries"  name="entries" style="display: inline-block;width:100px">
            <option value="2">2</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="15">15</option>
            <option value="20">20</option>
            <option value="25">25</option>
            <option value="30">30</option>
            <option value="35">35</option>
        </select>&emsp; Entries</div>
          
    </form>
                <table class="table table-dark">
                    <thead>
                        <tr>
                            <th>S.No</th>
                            <th>Trainer</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Gender</th>
                            <th>Age</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody class="table-border-bottom-0">
                        @{
                            int i = ViewBag.SerialNo;
                        }
                        @foreach (var trainer in Model.ToList())
                        {
                            <tr>
                                <td><i class="fab fa-angular fa-lg text-danger me-3"></i> <strong>@i</strong></td>
                                <td>
                                    <ul class="list-unstyled users-list m-0 avatar-group d-flex align-items-center">
                                        <li data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" class="avatar avatar-xs pull-up" title="" data-bs-original-title="@trainer.Name">
                                            @if (!string.IsNullOrEmpty(trainer.PhotoPath))
                                            {
                                                <img src="/images/trainers/@trainer.PhotoPath" alt="Avatar" class="rounded-circle">
                                            }
                                            else
                                            {
                                                <img src="../assets/img/avatars/5.png" alt="Avatar" class="rounded-circle">

                                            }
                                        </li>
                                    </ul>
                                </td>
                                <td>@trainer.Name</td>
                                <td>@trainer.Email</td>
                                <td>@trainer.Gender</td>
                                <td>@trainer.Age</td>
                                <td>

                                    @if (trainer.AvailabilityStatus == AvailabilityStatusEnum.Active)
                                    {
                                        <span class="badge bg-label-success me-1">@trainer.AvailabilityStatus</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-label-danger me-1">@trainer.AvailabilityStatus</span>
                                    }

                                </td>


                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu" style="">
                                            <a class="dropdown-item" asp-action="TrainerDetails" asp-controller="Trainer" asp-route-id="@trainer.TrainerID"><i class="bx bx-edit-alt me-1"></i> View</a>
                                            <a class="dropdown-item" asp-action="EditTrainerDetails" asp-controller="Trainer" asp-route-id="@trainer.TrainerID"><i class="bx bx-edit"></i> Edit</a>
                                            <a class="dropdown-item" id="@trainer.TrainerID" onclick="getTrainerDetails(this.id)" data-bs-toggle="modal" data-bs-target="#modalCenter" style="cursor:pointer"><i class="bx bx-edit"></i> Change Status</a>

                                            <button id="@trainer.TrainerID" onclick="DeleteConfirmation(this.id)" class="dropdown-item"><i class="bx bx-trash me-1"></i> Delete</button>
                                            <a style="visibility: hidden; width: 0px; height: 0px" id="swalDelete-@trainer.TrainerID" asp-controller="Trainer" asp-action="DeleteTrainer" asp-route-id="@trainer.TrainerID" class="dropdown-item"><i class="bx bx-trash me-1"></i> Delete</a>

                                        </div>
                                    </div>
                                </td>
                            </tr>
                            i++;
                        }

                    </tbody>
                </table>
                <div style="text-align:left;margin:14px">
                    Showing @ViewBag.Partials of @ViewBag.TotalData
                </div>
                <div class="text-center">

                    <div class="demo-inline-spacing">
                        <!-- Basic Pagination -->
                        <nav aria-label="Page navigation">
                            <ul class="pagination" style="display:flex;justify-content:center">
                                <li class="page-item first">
                                    <a class="page-link" asp-controller="Trainer" asp-action="availabletrainers" asp-route-PageNumber="1"><i class="tf-icon bx bx-chevrons-left"></i></a>
                                </li>
                                <li class="page-item prev">
                                    <a class="page-link" asp-controller="Trainer" asp-action="availabletrainers" asp-route-PageNumber="@(ViewBag.PageNumber == 1 ? 1: ViewBag.PageNumber - 1)"><i class="tf-icon bx bx-chevron-left"></i></a>
                                </li>
                                @for (int j = 0; j < (int)ViewBag.Pages; j++)
                                {
                                    var isActive = (j + 1) == ViewBag.PageNumber ? "active" : "";
                                    <li class="page-item  @isActive">
                                        <a class="page-link" asp-controller="Trainer" asp-action="availabletrainers" asp-route-PageNumber="@(j+1)"> @(j + 1) </a>
                                    </li>
                                }


                                <li class="page-item next">
                                    <a class="page-link" asp-controller="Trainer" asp-action="availabletrainers" asp-route-PageNumber="@(ViewBag.PageNumber == ViewBag.Pages ? ViewBag.Pages: ViewBag.PageNumber + 1)"><i class="tf-icon bx bx-chevron-right"></i></a>
                                </li>
                                <li class="page-item last">
                                    <a class="page-link" asp-controller="Trainer" asp-action="availabletrainers" asp-route-PageNumber="@ViewBag.Pages"><i class="tf-icon bx bx-chevrons-right"></i></a>
                                </li>
                            </ul>
                        </nav>
                        <!--/ Basic Pagination -->
                    </div>
                </div>
            }
            else
            {
                <div class="card-header">
                    No Trainers available yet
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="modalCenter" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <form asp-controller="Trainer" asp-action="ChangeTrainerAccountStatus" method="post">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalCenterTitle">Change Member Account Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col mb-3">
                            <label for="nameWithTitle" class="form-label">Trainer ID</label>
                            <input type="text" id="trainerID1" name="trainerID1" hidden class="form-control">
                            <input type="text" id="trainerID" name="trainerID" disabled class="form-control">
                        </div>
                        <div class="col mb-3">
                            <label for="nameWithTitle" class="form-label">Account Status</label>
                            <select type="text" id="accountStatus" name="accountStatus" asp-items="@Html.GetEnumSelectList<AvailabilityStatusEnum>()" class="form-control">
                            </select>
                        </div>
                    </div>

                </div>
                <div class="modal-footer">
                    <button class="btn btn-outline-secondary" data-bs-dismiss="modal">
                        Close
                    </button>


                    <button id="changeStatusBtn" class="btn btn-danger" type="submit">Save changes</button>

                </div>
            </div>
        </form>
    </div>
</div>
@if (ViewBag.IsAccountStatusUpdated)
{
    <div id="toaster" class="bs-toast toast toast-placement-ex m-2 fade bg-success top-0 end-0 show" role="alert" aria-live="assertive" data-bs-delay="2000" aria-atomic="true">
        <div class="toast-header">
            <i class="bx bx-bell me-2"></i>
            <div class="me-auto fw-semibold">Alert</div>
            <small>11 mins ago</small>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            Trainer account availability status updated
        </div>
    </div>
}

@section Scripts
    {
        @await Html.PartialAsync("../Shared/Partials/changeEntries.cshtml");
    <script>
        var toast = document.getElementById("toaster")
        setTimeout(() => {
            toast?.classList.replace("show", "hide")
        }, 3000)

        function DeleteConfirmation(id) {
            let val = false;
            Swal.fire({
                title: 'Are you sure?',
                text: 'You will not be able to revert this!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            })
                .then((result) => {
                    if (result.isConfirmed) {
                        document.querySelector("#swalDelete-" + id).click();
                    }
                })
        }

        var data = JSON.parse('@Html.Raw(Json.Serialize(Model))')
        function getTrainerDetails(id) {
            const trainer = data.filter((single) => {
                return single.trainerID == id
            })
            document.getElementById("trainerID").value = trainer[0].trainerID
            document.getElementById("trainerID1").value = trainer[0].trainerID
            document.getElementById("accountStatus").value = trainer[0].availabilityStatus
        }


    </script>
}