@model IEnumerable<ApplicationUserModel>
@inject ITrainerRepository _repository
@{
    ViewBag.Title = "Admin | Available Members";
    ViewBag.MemberDetailsActive = "active open";
    ViewBag.AvailableMembersActive = "active";
    var trainers = _repository.GetAllTrainers().ToList();
    ViewBag.Trainers = new SelectList(trainers, "TrainerID", "Name");
}


<div class="container-xxl flex-grow-1 container-p-y">
  
    <div class="card">
        <h5 class="card-header">Registered Members</h5>
        <div class="">
           @if(Model.Any())
            {
                 <form id="submitEntries" asp-controller="Members" asp-action="AvailableMembers" asp-route-pageNumber="1" method="get" class=" my-1 p-2" style="display: flex;flex-direction: row;">
        Show&emsp;
        <div>
            <select onchange="changeEntries()" type="text" id="entries"  name="entries" style="display: inline-block;width:100px">
            <option value="2">2</option>
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="15">15</option>
            <option value="20">20</option>
            <option value="25">25</option>
            <option value="30">30</option>
            <option value="35">35</option>
        </select>&emsp; Entries</div>
          
    </form>
                <table class="table table-dark">
                    <thead>
                        <tr>
                            <th>S.No</th>
                            <th>Users</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Apply Date</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody class="table-border-bottom-0">
                     @{int i = 1;}
                     @foreach(var member in Model.ToList())
                        {
                            <tr>
                                <td><i class="fab fa-angular fa-lg text-danger me-3"></i> <strong>@i</strong></td>
                                <td>
                                    <ul class="list-unstyled users-list m-0 avatar-group d-flex align-items-center">
                                        <li data-bs-toggle="tooltip" data-popup="tooltip-custom" data-bs-placement="top" class="avatar avatar-xs pull-up" title="" data-bs-original-title="@member.Name">
                                            @if(!string.IsNullOrEmpty(member.PhotoPath))
                                            {
                                                <img src="~/images/members/@member.PhotoPath" alt="Avatar" class="rounded-circle">
                                            }
                                            else
                                            {
                                            <img src="../assets/img/avatars/5.png" alt="Avatar" class="rounded-circle">
                                                
                                            }
                                        </li>
                                    </ul>
                                </td>
                                <td >@member.Name</td>
                                <td>@member.Email</td>
                                <td>@member.CreatedDate</td>
                                <td>
                                
                                @if(member.AvailabilityStatus == AvailabilityStatusEnum.Active)
                                    {
                                        <span class="badge bg-label-success me-1">@member.AvailabilityStatus</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-label-danger me-1">@member.AvailabilityStatus</span>
                                    }

                                </td>
                              
                         
                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown" aria-expanded="false">
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu" style="">
                                            <a class="dropdown-item" asp-action="MemberViewDetails" asp-controller="Members" asp-route-id="@member.Id"><i class="bx bx-edit-alt me-1"></i> View</a>
                                            <a class="dropdown-item" id="@member.Id" onclick="getMemberDetails(this.id)" data-bs-toggle="modal" data-bs-target="#modalCenter" style="cursor:pointer"><i class="bx bx-edit-alt me-1"></i> Change Status</a>
                                            <a class="dropdown-item" id="@member.Id" onclick="getMemberDetails(this.id)" data-bs-toggle="modal" data-bs-target="#assignTrainerModal"><i class="bx bx-edit"></i> Assign Trainer</a>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            i++;
                        }

                    </tbody>
                </table>
                <nav aria-label="Page navigation">
                    <ul class="pagination my-4"  style="display:flex;justify-content:center">
                        <li class="page-item first">
                            <a class="page-link" asp-controller="Members" asp-action="availableMembers" asp-route-pageNumber="1"><i class="tf-icon bx bx-chevrons-left"></i></a>
                        </li> 
                        <li class="page-item prev">
                            <a class="page-link" asp-controller="Members" asp-action="availableMembers" asp-route-pageNumber="@(ViewBag.PageNumber == 1 ? ViewBag.PageNumber : ViewBag.PageNumber - 1)"><i class="tf-icon bx bx-chevron-left"></i></a>
                        </li>
                        @for(int k = 1;k <= ViewBag.Pages; k++)
                        {
                            <li class="page-item @(ViewBag.PageNumber == k? "active" : "")">
                                <a class="page-link" asp-controller="Members" asp-action="availableMembers" asp-route-pageNumber="@k">@k</a>
                            </li>
                        }
                        <li class="page-item next">
                            <a class="page-link" asp-controller="Members" asp-action="availableMembers" asp-route-pageNumber="@(ViewBag.PageNumber == ViewBag.Pages ? ViewBag.PageNumber : ViewBag.PageNumber + 1)"><i class="tf-icon bx bx-chevron-right"></i></a>
                        </li>
                        <li class="page-item last">
                            <a class="page-link" asp-controller="Members" asp-action="availableMembers" asp-route-pageNumber="@ViewBag.Pages"><i class="tf-icon bx bx-chevrons-right"></i></a>
                        </li>
                       
                     
                    </ul>
                </nav>
            }
            else
            {
               <div class="mb-3 mx-3">
                    <div class="alert alert-warning">
                        <p class="mb-0">No Members registered.</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="modal fade" id="modalCenter" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <form asp-controller="Members" asp-action="ChangeAccountStatus" method="post">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalCenterTitle">Change Member Account Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col mb-3">
                        <label for="nameWithTitle" class="form-label">Member ID</label>
                            <input type="text" id="memberID1" name="memberID1" hidden class="form-control">
                            <input type="text" id="memberID" name="memberID" disabled class="form-control">
                    </div>
                    <div class="col mb-3">
                        <label for="nameWithTitle" class="form-label">Account Status</label>
                            <select type="text" id="accountStatus" name="accountStatus" asp-items="@Html.GetEnumSelectList<AvailabilityStatusEnum>()" class="form-control">
                            </select>
                    </div>
                </div>
            
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Close
                </button>
             

                <button id="changeStatusBtn" class="btn btn-danger" type="submit" >Save changes</button>
      
            </div>
        </div>
        </form>
    </div>
</div>
<div class="modal fade" id="assignTrainerModal" tabindex="-1" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <form asp-controller="Members" asp-action="AssignTrainerToMembers" method="post">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalCenterTitle">Change Member Account Status</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <span ></span>
                <div class="row">
                    <div class="col mb-3">
                        <label for="nameWithTitle" class="form-label">Member ID</label>
                            <input type="text" id="memberID2" name="memberID2" hidden class="form-control">
                            <input type="text" id="memberID22" name="memberID2" disabled class="form-control">
                    </div>
                    <div class="col mb-3">
                        <label for="nameWithTitle" class="form-label">Available Trainers</label>
                           @Html.DropDownList("TrainerID", (IEnumerable<SelectListItem>)ViewBag.Trainers, "Please Choose a Trainer", new { @class ="form-control" })
                    </div>
                </div>
            
            </div>
            <div class="modal-footer">
                <button type="button"  class="btn btn-outline-secondary" data-bs-dismiss="modal">
                    Close
                </button>
             

                <button id="changeStatusBtn" onclick="return IsTrainerAssigned()" class="btn btn-danger" type="submit" >Save changes</button>
      
            </div>
        </div>
        </form>
    </div>
</div>
@if(ViewBag.IsAccountStatusUpdated || ViewBag.IsTrainerAssigned)
{
    <div id="toaster" class="bs-toast toast toast-placement-ex m-2 fade bg-success top-0 end-0 show" role="alert" aria-live="assertive" data-bs-delay="2000" aria-atomic="true">
    <div class="toast-header">
        <i class="bx bx-bell me-2"></i>
        <div class="me-auto fw-semibold">Alert</div>
        <small>11 mins ago</small>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
            @if (ViewBag.IsAccountStatusUpdated)
            {
                <span>User account availability status updated</span>
            }
            else if(ViewBag.IsTrainerAssigned)
            {
                <span>Trainer has been assigned to the Member</span>
            }
        </div>
</div>
}

@section Scripts
{
        @await Html.PartialAsync("../Shared/Partials/changeEntries.cshtml");
    <script>

        var users = JSON.parse('@Html.Raw(Json.Serialize(Model))')
        function getMemberDetails(id) {
            var userDetails = users.filter((obj)=>
            {
                return obj.id === id
            })
            debugger;
            document.getElementById("memberID").value = userDetails[0]?.id
            document.getElementById("memberID1").value = userDetails[0]?.id
            document.getElementById("memberID2").value = userDetails[0]?.id
            document.getElementById("memberID22").value = userDetails[0]?.id
            document.getElementById("accountStatus").value = userDetails[0]?.availabilityStatus
            if(userDetails[0]?.assignedTrainer)
            {
            document.getElementById("TrainerID").value = userDetails[0]?.assignedTrainer

            }
            
          

        }
        var toast = document.getElementById("toaster")
        setTimeout(()=>
        {
            toast?.classList.replace("show","hide")
        },3000)

        function IsTrainerAssigned()
        {
            if($("#Trainer").val() === "")
            {
               return false;
            }
            else
            {
                return true;
            }
            
        }
    </script>
}
